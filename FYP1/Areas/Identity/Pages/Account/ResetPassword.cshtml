@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Reset password";
}

@* <h1>@ViewData["Title"]</h1>
<h2>Reset your password.</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Input.Code" type="hidden" />
            <div class="form-floating">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                <label asp-for="Input.Email" class="form-label"></label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.Password" class="form-label"></label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Reset</button>
        </form>
    </div>
</div> *@

<style>
    li {
        list-style-type: none;
    }

    .success-text {
        color: #3c763d;
        font-size: 12px;
        margin-top: 8px;
    }

    a:hover {
        color: white;
    }
    .fail-text{
        display:none;
    }
</style>

<div class="login-container">
    <div class="login-user-container">
        <div class="enter-container">
            <a style="align-self:center" href="~/Home">
                <img alt="logo"
                     src="~/images/dwei-logo.png"
                     class="login-user-logo" />
            </a>
            <h1 class="login-user-text"><span>Reset Password</span></h1>
            <span class="login-user-description"><span>Enter your email and new password</span></span>
            <div asp-validation-summary="ModelOnly" class="login-user-description" style="color:#E14747"></div>
            <span class="register-form-confirm-no-margin-text fail-text">
                <span>
                    We're sorry, but we were unable to approve your change password request.
                    Please ensure that you have clicked the verification link correctly or enter correct email.
                    If you continue to experience issues, please contact our support team for further assistance.
                </span>
            </span>
            <span class="register-form-confirm-margin-text fail-text">
                <span>
                    If you believe this is an error, you can also attempt to log in and verify your email address again.
                    Alternatively, if the verification link has expired, you can request a new verification email to be sent to you.
                    Our support team is available to help resolve any issues you may encounter.
                </span>
            </span>
            <form method="post" class="enter-form">
                <input asp-for="Input.Code" type="hidden" />
                <div class="enter-input-label-container">
                    <label asp-for="Input.Email" class="enter-label"><span>Email</span></label>
                    <input asp-for="Input.Email" id="username" autocomplete="username" aria-required="true" type="text" placeholder="Email" class="input" />
                    <span id="username-error" asp-validation-for="Input.Email" class="register-user-error-text"></span>

                </div>
                <div class="enter-input-label-container">
                    <label asp-for="Input.Password" class="enter-label"><span>Password</span></label>
                    <input asp-for="Input.Password" id="password" type="password" placeholder="Password" class="input" />
                    <span id="password-error" asp-validation-for="Input.Password" class="register-user-error-text"></span>

                </div>
                <div class="enter-input-label-container">
                    <label asp-for="Input.ConfirmPassword" class="enter-label"><span>Confirm</span></label>
                    <input asp-for="Input.ConfirmPassword" id="confirm-password" type="password" placeholder="Confirm" class="input" />
                    <span id="confirm-password-error" asp-validation-for="Input.ConfirmPassword" class="register-user-error-text"></span>
                </div>
                <div class="login-user-submit-container">
                    <a href="./Login"
                       class="register-form-left-button enter-button">
                        <span>Login Page</span>
                    </a>
                    <button type="submit" class="enter-button">
                        <span>Reset</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
    @Html.Partial("_FooterGuest")
</div>
<script>
    $("input").focusin(function () {
        $(this).prev("label.enter-label").css("color", "#3282E9");
    })
    $("input").focusout(function () {
        $(this).prev("label.enter-label").css("color", "var(--dl-color-gray-700)");
    })
    
    if ($("div.login-user-description").text().trim() !== "") {
        $(".enter-input-label-container").css("display", "none");
        $("span.login-user-description").css("display", "none");
        $(".fail-text").css("display", "flex");
        $("div.login-user-description").text("Error: " + $("div.login-user-description").text());
        $("button.enter-button").css("display", "none");
    }

    // Function to handle changes in validation error spans
    function handleValidationErrorChange(inputId, errorSpanId) {
        var inputElement = document.getElementById(inputId);
        var errorSpan = document.getElementById(errorSpanId);
        var previousElement = inputElement.previousElementSibling;
        // Check if the error message is visible
        if ($(errorSpan).text().trim() !== '') {
            // Add a CSS class to indicate an error state
            previousElement.classList.add("error-label");
            inputElement.classList.add('error-input');
        } else {
            // Remove the CSS class if the error message is hidden
            inputElement.classList.remove('error-input');
            previousElement.classList.remove("error-label");

        }
    }

    // Create a new instance of MutationObserver for each error span
    var observerEmail = new MutationObserver(function (mutations) {
        handleValidationErrorChange('username', 'username-error');
    });

    var observerPassword = new MutationObserver(function (mutations) {
        handleValidationErrorChange('password', 'password-error');
    });

    var observerConfirmPassword = new MutationObserver(function (mutations) {
        handleValidationErrorChange('confirm-password', 'confirm-password-error');
    });

    // Configuration of the observers:
    var config = { attributes: true, childList: true, subtree: true };

    // Start observing the error message nodes for configured mutations
    observerEmail.observe(document.getElementById('username-error'), config);
    observerPassword.observe(document.getElementById('password-error'), config);
    observerConfirmPassword.observe(document.getElementById('confirm-password-error'), config);
</script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
